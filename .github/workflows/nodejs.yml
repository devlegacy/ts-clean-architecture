name: Node CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    # Service containers to run with `build`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11.6-alpine
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [16.x,18.x] # current versions + next versions o prepare future migrations
        mongodb-version: ['6.0']
        elasticsearch-version: ['8.8.0']
        rabbitmq-version: ['3.12.0-management-alpine']

    steps:
      # https://github.com/actions/setup-node
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # https://github.com/supercharge/mongodb-github-action
      - name: Start|Launch MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        # uses: wbari/start-mongoDB@v0.2
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
      - name: Start RabbitMQ
        # uses: namoshek/rabbitmq-github-action@v1
        uses: nijel/rabbitmq-action@v1.0.0
        with:
          version: ${{ matrix.rabbitmq-version }}
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Launch elasticsearch
        uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: ${{ matrix.elasticsearch-version }}
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'
      - name: Set up Postgres - Create additional Postgres databases
        run: |
          sudo systemctl start postgresql.service
          pg_isready
          psql -c "CREATE DATABASE mooc;" -U postgres
          psql -c "CREATE DATABASE mooc-test;" -U postgres
          psql -c "CREATE DATABASE mooc-test2;" -U postgres
        # --owner=testuser
        #  PGPASSWORD=postgres
        # -h localhost -d postgres  PGPASSWORD=postgres
        # -h localhost -d postgres
        # -h localhost -d postgres
      - name: npm install
        run: |
          npm install
      - name: npm run build
        run: |
          npm run build --if-present
          npm run lint
      - name: npm test
        run: |
          npm test
