services:
  elasticsearch:
    container_name: elasticsearch
    # image: docker.elastic.co/elasticsearch/elasticsearch
    # https://www.elastic.co/guide/en/elasticsearch/reference/8.x/docker.html#_start_a_single_node_cluster
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.0 # 8.5.3
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node #Elasticsearch forms a single-node cluster
      - bootstrap.memory_lock=true # might cause the JVM or shell session to exit if it tries to allocate more memory than is available!
      - 'ES_JAVA_OPTS=-Xms2048m -Xmx2048m'
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1 # The memlock soft and hard values configures the range of memory that ElasticSearch will use. Setting this to â€“1 means unlimited.
        hard: -1
    volumes:
      # - esdata:/usr/share/elasticsearch/data
      - ./.data/esdata:/usr/share/elasticsearch/data
      # - certs:/usr/share/elasticsearch/config/certs
    ports:
      - 9200:9200
    networks:
      - app-network

  # localhost:5601
  kibana:
    # image: docker.elastic.co/kibana/kibana
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.18.0
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    # volumes:
    #   - certs:/usr/share/kibana/config/certs
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    networks:
      - app-network

networks:
  app-network:
    name: app-network
    driver: bridge
    ipam:
      driver: default
# docker-compose -f docker-compose.elasticsearch.yml up -d
